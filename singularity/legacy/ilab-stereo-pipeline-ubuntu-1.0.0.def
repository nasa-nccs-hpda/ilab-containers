#-------------------------------------------------------------------------------
# docker build -t stereo-pipeline:1.0 .
# docker run -it stereo-pipeline:1.0
#
# ADAPT supports Debian and Debian uses apt-get.
#-------------------------------------------------------------------------------
Bootstrap: localimage
FROM: ilab-core-ubuntu-1.0.0.sif

%environment
	export PATH=$PATH:/mnt/data-store/StereoPipeline-2.7.0-2020-07-29-x86_64-Linux/bin

%post

#-------------------------------------------------------------------------------
# System Dependencies
#-------------------------------------------------------------------------------
apt-get update && apt-get install --fix-missing -y \
	bzip2 \
	libx11-dev \
	python3 \
    wget  \
    libxext-dev

#-------------------------------------------------------------------------------
# Stereo Pipeline
#-------------------------------------------------------------------------------
export dataStoreDir="/mnt/data-store/"
mkdir $dataStoreDir

cd $dataStoreDir \
	&& wget https://github.com/NeoGeographyToolkit/StereoPipeline/releases/download/2.7.0/StereoPipeline-2.7.0-2020-07-29-x86_64-Linux.tar.bz2 \
	&& tar -xf StereoPipeline-2.7.0-2020-07-29-x86_64-Linux.tar.bz2 \
	&& rm StereoPipeline-2.7.0-2020-07-29-x86_64-Linux.tar.bz2

#ln -s /usr/bin/python3 /usr/bin/python

%test

    echo 'System Information:'
    uname -a

    echo 'Linux Version:'
    cat /etc/os-release

    echo 'gdalinfo --formats | grep -i jpeg'
    gdalinfo --formats | grep -i jpeg

    echo 'gdalinfo --formats | grep -i hdf'
    gdalinfo --formats | grep -i hdf

    echo 'ogrinfo --formats | grep GDB'
    ogrinfo --formats | grep GDB

    echo 'Python version:'
    python -V

    echo 'GDAL version:'
    python -c 'from osgeo import gdal; print(gdal.__version__)'

    echo 'Java version:'
    java --version

    echo 'Singularity version:'
    singularity --version

    echo 'Verify ASP install'
    #dg_mosaic -h