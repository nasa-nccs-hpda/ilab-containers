## Generate core container with ilab-specific dependencies that builds on the Python ecosystem container
Bootstrap: localimage
FROM: ./cisto-data-science-centos-1.0.0.sif

%labels
    Author gtamkin
    Version v1.0.0

%help
===========================================================================
	- ilab-core (extends -> python3-data-science) â€“ contains GIS & ilab dependencies:
		a.	GDAL
		b.	Celery
		c.  Redis (Celery server)
===========================================================================

%environment
    # set PYTHONPATH for access to ILProcessController
    export PYTHONPATH="$PYTHONPATH:/usr/local/core"
	export LD_LIBRARY_PATH=/mnt/data-store/FileGDB_API-64gcc51/lib/:/usr/local/lib:$LD_LIBRARY_PATH

%post

    # install Celery
    python -m pip install --upgrade celery[redis]==4.3.1

    # install Redis & Flower (Celery server dependencies)
    python -m pip install --upgrade redis==3.4.1
    python -m pip install --upgrade redis-server==5.0.7 
    python -m pip install --upgrade flower==0.9.4
    cd /usr/local/bin
    ln -sf /usr/local/lib/python3.7/site-packages/redis_server/bin/redis-server .

    # retrieve IL Celery automation source from git repository and open permissions
    mkdir -p /usr/local/core
    git clone --single-branch --branch master https://github.com/nasa-nccs-hpda/core.git /usr/local/core
    chmod a+rwx -R /usr/local/core

#-------------------------------------------------------------------------------
# System Dependencies
#
# Centos comes with:
#   bash completion
#
# Git added many packages, including:  pip, openSSH
#-------------------------------------------------------------------------------
	yum install -y \
        git \
        man-pages \
        man \
        python3 \
        sudo \
        which \
        bzip2 \
        diffutils \
        file \
        gcc-c++ \
        make \
        python3-devel \
        swig \
        wget

    python3 -m pip install numpy

#-------------------------------------------------------------------------------
# GDAL 3.2.0, released 2020/10/2
#
# Used by: ImageFile and others
#
# Test:  "gdalinfo --version" it should be what you expect
# Test:  "gdalinfo --formats | grep -i hdf" should include HDF4 and HDF5
# Test:  "ogr2ogr" --formats | grep -i gdb" should include FileGDB
# Test:  export LD_LIBRARY_PATH=/usr/local/lib, Python shell,
#        from osgeo import gdal, should produce no error
#
# First, add the yum repositories containing proj.
#-------------------------------------------------------------------------------
export dataStoreDir="/mnt/data-store/"
mkdir $dataStoreDir

# Set up repositories in which to find the applications needed.
yum install -y \
	https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

yum install -y dnf-plugins-core
dnf config-manager --set-enabled powertools

yum install -y geos \
	geos-devel \
	proj-devel \
	netcdf-devel \
	expat-devel

# Install FileGDB.
cd $dataStoreDir \
	&&  wget https://github.com/Esri/file-geodatabase-api/raw/master/FileGDB_API_1.5/FileGDB_API_1_5_64gcc51.tar.gz \
	&& tar -zxf FileGDB_API_1_5_64gcc51.tar.gz \
	&& rm FileGDB_API_1_5_64gcc51.tar.gz

# JPEG 2000 dependencies
yum install -y jasper-devel \
	&& yum install -y openjpeg2-devel

# GDAL, finally.
export gdalVersion=3.2.0
export gdalName=gdal-$gdalVersion

 cd $dataStoreDir \
    && wget http://download.osgeo.org/gdal/$gdalVersion/$gdalName.tar.gz \
    && tar -zxf $gdalName.tar.gz \
    && rm $gdalName.tar.gz

 cd $dataStoreDir/$gdalName \
	&& ./configure LIBTOOL='/usr/bin/libtool --tag=CC' --with-python --with-pic --with-geos=yes --with-netcdf --with-jpeg --with-jasper --with-openjpeg \
	&& export LD_LIBRARY_PATH=/usr/local/lib \
    && make \
    && make install

#-------------------------------------------------------------------------------
# Used by: date_range in MasRequest
#-------------------------------------------------------------------------------
 sudo python3 -m pip install setuptools pandas
