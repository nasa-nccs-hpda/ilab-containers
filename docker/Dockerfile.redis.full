### FROM osgeo/gdal:ubuntu-full-3.3.3

#-----------------------------------------------------------------------------------------
# Build ilab-base container
# gdal build: https://github.com/OSGeo/gdal/blob/master/gdal/docker/ubuntu-full/Dockerfile
#  https://github.com/nasa-nccs-hpda/core/blob/master/container/cisto-gdal-2.0.0.def
#-----------------------------------------------------------------------------------------
### Bootstrap: docker
# FROM: osgeo/gdal:ubuntu-full-latest
# EVHR only works with GDAL 3.3.3 so have to make a separate ilab-base-gdal-3.3.3 with GDAL 3.3.3

FROM osgeo/gdal:ubuntu-full-3.3.3

### %labels
###     gdal_maintainer Even Rouault <even.rouault@spatialys.com>
###     cisto_author gtamkin
###     cisto_modified sstrong
###     Version v2.0.0

### %help
### ===========================================================================
### 	- python3-data-science â€“ contains the Python data science ecosystem:
### 		a.	NumPy
### 		b.	SciPy
### 		c.	matplotlib
### 		d.	IPython
### 		e.	pandas
### 		f.	Scikit-learn
###  - Using redis-server:
###         $ singularity instance start $container_filename $container_service
###         $ singularity exec instance://ilab-base ps aux | grep redis
###         $ singularity instance stop $container_service
### ===========================================================================

### %environment
###     #export PYTHONPATH="$PYTHONPATH:/usr/local/ilab"
### ###     #1/7/22 - Replaced with correct python path
###     #export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python3.8/dist-packages"
ENV PYTHONPATH="/usr/local/lib/python3.8/dist-packages"
ENV REDIS_PORT="6379"

### %post

ENV PROJECT_PATH="/usr/local/ilab"
ENV REDIS_FILE="/etc/profile.d/redis_server.sh"
RUN mkdir -p $PROJECT_PATH

    #-------------------------------------------------------------------------------
    # Make NCCS specific links
    #-------------------------------------------------------------------------------
RUN    mkdir -p /att/nobackup /lscratch /att/gpfsfs/atrepo01 /att/pubrepo /css/nga/INDEX/current/nga_footprint.gdb
#RUN    for i in $(seq 1 30); do
#RUN        ln -s /gpfs/gsfs${i} /gs${i};
#RUN    done

    #-------------------------------------------------------------------------------
    # System Dependencies
    #-------------------------------------------------------------------------------
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip python3-dev wget vim curl git procps gcc g++ bzip2 libssl-dev \
        libsqlite3-dev libx11-dev libgeos++-dev libproj-dev
    DEBIAN_FRONTEND=noninteractive apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/apt

    #-------------------------------------------------------------------------------
    # Tools 
    # 1/21/22 - added installation of 2to3 python conversion tool
    #-------------------------------------------------------------------------------
###    pip install 2to3

    #-------------------------------------------------------------------------------
    # Python Stack
    #-------------------------------------------------------------------------------
RUN python -m pip install --upgrade pip

###    python -m pip install awscli s3fs
RUN python -m pip install celery[redis]
###    python -m pip install certifi
###    python -m pip install cryptography
###    python -m pip install Cython
###    python -m pip install dask
###    python -m pip install decorator
###    python -m pip install dill
###    python -m pip install distributed
###    python -m pip install docutils
###    python -m pip install fiona
###    python -m pip install flower
###    python -m pip install geopandas
###    python -m pip install h5py
###    python -m pip install imageio
###    python -m pip install ipykernel
###    python -m pip install ipython
###    python -m pip install ipython-genutils
###    python -m pip install ipywidgets
###    python -m pip install matplotlib
###    python -m pip install netcdf4
###    python -m pip install networkx
###    python -m pip install notebook
###    python -m pip install numba
###    python -m pip install numexpr
###    python -m pip install numpy
###    python -m pip install pandas
###    python -m pip install pyhdf
###    python -m pip install pyproj
###    python -m pip install Pysal
###    python -m pip install PyYAML
###    python -m pip install rasterio
RUN python -m pip install redis
RUN python -m pip install redis-server
###    python -m pip install requests
###    python -m pip install rioxarray
###    python -m pip install scikit-image
###    python -m pip install scikit-learn
###    python -m pip install scipy
###    python -m pip install seaborn
###    python -m pip install shapely
###    python -m pip install cartopy
###    python -m pip install xarray
###    python -m pip install urllib3
###    python -m pip install zarr
###    python -m pip install ray[default]

###    python -m pip cache purge

    # Add redis-server binary to /usr/local/bin
ENV pyVer=`python --version | awk -F' ' '{print $2}' | awk -F'.' '{print $1"."$2}'`
RUN ln -sf /usr/local/lib/python${pyVer}/dist-packages/redis_server/bin/redis-server /usr/local/bin/redis-server
    
    # 3/11/22 modified by Caleb for verson 2.0.0 for testing of 2 lines below
    # 5/4/22 Testing passed. nepac and.. app containers also passed so making this ilab-base-3.3.3-v2 the new production version 2.
    # Setup redis-server daemon. Sets REDIS_PORT env variable for celery-based applications to reference the correct redis port at run-time.
    # echo "export REDIS_PORT=\"\$(python -c 'import socket; s = socket.socket(); s.bind((\"\", 0)); print(s.getsockname()[1]); s.close();')\"" > $REDIS_FILE
RUN echo "redis-server --daemonize yes --port \$REDIS_PORT" >> $REDIS_FILE;
RUN echo "export SINGULARITYENV_REDIS_PORTS=\$REDIS_PORT" >> $REDIS_FILE;
RUN chmod +x $REDIS_FILE;

%runscript
RUN /bin/bash -c "source /etc/profile.d/redis_server.sh"
RUN exec "$@"
RUN /bin/bash -c "pkill redis-server"

%startscript
    #/bin/bash -c "export REDIS_PORT=6379"
RUN exec /bin/bash -c "source /etc/profile.d/redis_server.sh"

%test

RUN cat /etc/os-release | grep 20
RUN gdalinfo --formats | grep -i jpeg
RUN gdalinfo --formats | grep -i hdf
RUN ogrinfo --formats | grep GDB
RUN python -V | grep 3
RUN python -c 'from osgeo import gdal; print(gdal.__version__)'


